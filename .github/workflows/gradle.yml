name: Java CI/CD with Gradle and CodeDeploy

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Override application.properties
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test

      - name: Add execute permission to scripts
        run: chmod +x scripts/*.sh

      - name: Prepare Deployment Directory
        run: |
          mkdir -p deploy
          JAR_FILE=$(ls ./build/libs/*.jar | head -n 1)
          cp "$JAR_FILE" ./deploy/premier7-backend.jar
          cp ./appspec.yml ./deploy/
          cp ./scripts/*.sh ./deploy/

      - name: Make zip package
        run: zip -r ./premier7-deploy.zip ./deploy
        shell: bash

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp ./premier7-deploy.zip s3://${{ env.S3_BUCKET_NAME }}/

      - name: Deploy with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.CODE_DEPLOY_APP_NAME }} \
            --deployment-group-name ${{ secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --file-exists-behavior OVERWRITE \
            --s3-location bucket=${{ env.S3_BUCKET_NAME }},bundleType=zip,key=premier7-deploy.zip \
            --region ${{ env.AWS_REGION }}
